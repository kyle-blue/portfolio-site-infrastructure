apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  namespace: {{ include "app-namespace" . }}
spec:
  revisionHistoryLimit: 2
  replicas: {{ .Values.service.numReplicas }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: {{ .Values.service.name }}
          image: {{ .Values.service.image }}
          imagePullPolicy: Always # Since we usually just use :latest tag
          resources: 
            {{ if eq .Values.service.resources.isHardLimit true }}limits{{ else }}requests{{ end }}:
              memory: {{ .Values.service.resources.memory }}
              cpu: {{ .Values.service.resources.cpu }}
          env:
            - name: ENVIRONMENT
              value: {{ include "environment" . }}
            {{- range $key, $value := .Values.service.envVars }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.service.containerPort }}
          envFrom:
            - secretRef:
                name: psql-password
                optional: false
      {{- if eq (include "environment" .) "dev" }}
          volumeMounts:
            - name: ca-bundle
              mountPath: /etc/ssl/certs/ca.crt
              subPath: ca.crt
      volumes:
        - name: ca-bundle
          configMap:
            # ca-bundle made by trust-manager which holds trusted certificate authority (CA) public keys
            name: {{ include "ca-bundle-name" . }}
      {{- end }}
