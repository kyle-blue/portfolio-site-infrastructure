apiVersion: v1
kind: ConfigMap
metadata:
    name: nginx-conf-{{ .Values.service.name }}
    namespace: {{ include "app-namespace" . }}
data:
    nginx.conf: |
        user  nginx;
        worker_processes  1;

        error_log  /var/log/nginx/error.log warn;
        pid        /var/run/nginx.pid;


        events {
            worker_connections  10240;
        }


        http {
            include       /etc/nginx/mime.types;
            default_type  application/octet-stream;

            log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';

            access_log  /var/log/nginx/access.log  main;

            sendfile        on;
            #tcp_nopush     on;

            keepalive_timeout  65;

            #gzip  on;

            server {
                listen 80;
                server_name {{ .Values.ingress.host }};
                root /usr/share/nginx/html;
                index index.html;


                location ^~ /.well-known/acme-challenge/ {
                    root /usr/share/nginx/html;
                    allow all;
                    try_files $uri =404;  
                }

                location / {
                    try_files $uri /index.html;
                }              

                location /static/ {
                    # Allow direct serving of static assets (JS, CSS, images)
                    try_files $uri /index.html;
                }

                error_page 404 /index.html;
            }

            server {
                server_name {{ .Values.ingress.bareDomain }};

                location ^~ /.well-known/acme-challenge/ {
                    root /usr/share/nginx/html;
                    allow all;
                    try_files $uri =404;
                }

                location / {
                    return 301 https://{{ .Values.ingress.host }}$request_uri;
                }
            }            
        }